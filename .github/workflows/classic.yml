name: Create Issue and Assign to Classic Project

on:
  workflow_dispatch:

jobs:
  create_issue:
    runs-on: ubuntu-latest
    steps:
      - name: Install GitHub CLI
        run: |
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
          sudo apt-add-repository https://cli.github.com/packages
          sudo apt update
          sudo apt install gh -y

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GH_PAT }}" | gh auth login --with-token

      - name: Get current month
        id: get_month
        run: echo "month=$(date +'%B')" >> $GITHUB_OUTPUT

      - name: Create Issue
        id: create_issue
        run: |
          ISSUE_URL=$(gh issue create \
            --title "Monthly Report - ${{ steps.get_month.outputs.month }}" \
            --body "- [ ] Collect data\n- [ ] Validate data\n- [ ] Write report\n- [ ] Submit report" \
            --label "monthly-report" \
            --assignee "llmartella" \
            --repo $alletram \
            --json url,number --template '' | jq -r '.url')
          echo "issue_url=$ISSUE_URL" >> $GITHUB_OUTPUT

      - name: Add Issue to Classic Project 
        run: |
          ISSUE_ID=$(gh issue view ${{ steps.create_issue.outputs.issue_url }} --json id | jq -r '.id')
          PROJECT_ID=$(gh api graphql -f query='
            query {
              repository(owner: "llmartella", name: "'$alletram'") {
                projects(first: 10) {
                  nodes {
                    id
                    name
                  }
                }
              }
            }' | jq -r '.data.repository.projects.nodes[] | select(.name == "kanban") | .id')

          COLUMN_ID=$(gh api graphql -f query='
            query {
              repository(owner: "llmartella", name: "'$alletram'") {
                projects(first: 10) {
                  nodes {
                    columns(first: 10) {
                      nodes {
                        id
                        name
                      }
                    }
                  }
                }
              }
            }' | jq -r '.data.repository.projects.nodes[].columns.nodes[] | select(.name == "Ready") | .id')

          # Add issue to project column
          gh api --method POST /projects/columns/$COLUMN_ID/cards \
            -F content_id=$ISSUE_ID \
            -F content_type=Issue
