name: Create Monthly Task

on:
  schedule:
    - cron: '32 1 1-7 * 6' # First Saturday of every month at 8:00 AM ET (12:00 PM UTC)
  workflow_dispatch: # Allows manual triggering of the workflow

permissions:
  issues: write
  projects: write

jobs:
  create-task:
    runs-on: ubuntu-latest

    steps:
      - name: Create a task with a bullet list and assign it
        uses: actions/github-script@v6
        with:
          script: |
            const monthNames = [
              "January", "February", "March", "April", "May", "June",
              "July", "August", "September", "October", "November", "December"
            ];
            const currentMonth = monthNames[new Date().getUTCMonth()]; // Get the current month name

            const issueTitle = `Charlotte Pipe Payment 1 for ${currentMonth}`;
            const issueBody = `
            ### Tasks 
            - [ ] Task 1: Get all Template data from API
            - [ ] Task 2: Get all Unspecified reports from Share File
            - [ ] Task 3: Confirm file transaction counts
            - [ ] Task 4: Compile Transaction report and Exposure Report
            - [ ] Task 5: QC Exposure Exposure Report
            - [ ] Task 6: CPF Review
            - [ ] Task 7: Iterate tasks 4-6 until CPF approval is received
            `;

            const assignee = "llmartella"; // Replace with the GitHub username of the assignee
            const label = "agvend"; // Replace with the desired label
            const projectId = 3; // Replace with your project ID
            const statusFieldId = "181829972"; // Replace with your project's status field ID
            const statusValueId = "61e4505c"; // Replace with the desired status value ID


            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody,
              assignees: [assignee], // Add the assignee here
              labels: ["agvend"], // Add the label here
            });

             // Add the issue to a project
            await github.rest.projects.items.addToProject({
              project_id: projectId,
              content_id: issue.id,
              content_type: "Issue",
            });
